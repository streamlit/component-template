name: 'Build component wheels'
description: 'Action for building all components wheels'
inputs:
  custom_streamlit_component_lib_file:
    required: false
    description: |
      Path to local Streamlit Component Library package.
      To generate a package, run the npm pack command in the directory with the Streamlit component library.
    default: ''

outputs:
  output_directory:
    description: 'The directory where the built wheel packages of all the components are located'
    value: ${{ steps.final_step.outputs.output_directory }}

runs:
  using: 'composite'
  steps:
    - name: Install build backend for PEP 517
      working-directory: ${{ github.action_path }}/../../../
      shell: bash
      run: pip install build

    - name: Link develop version of streamlit-component-lib
      if: inputs.custom_streamlit_component_lib_file != ''
      working-directory: ${{ github.action_path }}/../../../
      shell: bash
      env:
        STREAMLIT_COMPONENT_LIB_FILE: ${{ inputs.custom_streamlit_component_lib_file }}
      run: |
        find examples templates -maxdepth 5 -type d -name frontend -print0 | while IFS= read -r -d '' line; do
          (
            cd "${line}" && npm install "${STREAMLIT_COMPONENT_LIB_FILE}"
          )
        done

    - name: Install node dependencies
      working-directory: ${{ github.action_path }}/../../../
      shell: bash
      run: ./dev.py all-npm-install

    - name: Build frontend code
      working-directory: ${{ github.action_path }}/../../../
      shell: bash
      run: ./dev.py all-npm-build

    - name: Build wheel packages
      working-directory: ${{ github.action_path }}/../../../
      shell: bash
      run: |
        grep -Rl "_RELEASE = False" examples templates | xargs -r sed -i 's/_RELEASE = False/_RELEASE = True/';
        ./dev.py all-python-build-package

    - name: Set outputs
      working-directory: ${{ github.action_path }}/../../../
      shell: bash
      id: final_step
      run: |
        output_dir="$(readlink -e dist)"
        echo "output_directory=${output_dir}" >> $GITHUB_OUTPUT
